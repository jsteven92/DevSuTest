package com.devsu.bank.infraestructure.rest.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.devsu.bank.domain.model.Account;
import com.devsu.bank.usecase.IGenericIteractor;

import jakarta.validation.Valid;

import com.devsu.bank.infraestructure.exception.LocalNotFoundException;

import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@RestController
@RequestMapping("/api/cuentas")
public class AccountRestController {
	
	private IGenericIteractor<Account> genericIteractor;
	
	@GetMapping("/{accountId}")
	public ResponseEntity<Account> getAccountById(@PathVariable Long accountId){
		return genericIteractor.findObjectById(accountId)
				.map(account -> new ResponseEntity<>( account, HttpStatus.OK ))
				.orElseThrow( () -> new LocalNotFoundException("Account not found") );
	}
	
	@PostMapping
	public ResponseEntity<Account> createAccount(@Valid @RequestBody Account account){
		return new ResponseEntity<>( genericIteractor.saveObject(account), HttpStatus.OK);
	}
	
	@PutMapping("/{accountId}")
	public ResponseEntity<Account> updateAccount(@PathVariable Long accountId, @Valid @RequestBody Account account){
		return genericIteractor.updateObject(accountId, account);
	}

}
