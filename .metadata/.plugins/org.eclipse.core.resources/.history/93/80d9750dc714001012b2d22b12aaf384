package com.devsu.bank.infraestructure.events;

import java.util.Date;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.stereotype.Component;

import com.devsu.bank.domain.model.Account;
import com.devsu.bank.domain.model.repository.AccountRepositoryPort;

import lombok.RequiredArgsConstructor;

@RequiredArgsConstructo
@Component
public class AccountEventProducer {
	
	private final KafkaTemplate<String, Event<?>> producer;
	
	@Value("${topic.client:client}")
	private String topicClient;
    
	public void publish(Account account) {
		AccountCreateEvent created = new AccountCreateEvent();
		created.setData(account);
		created.setId(UUID.randomUUID().toString());
		created.setType(EventType.CREATED);
		created.setDate(new Date());
		
		this.producer.send(topicClient, created);
	}
}
